version: '3'
services:
  nginx-proxy:
    depends_on: ['web']
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always

  web:
    image: node:12
    command: npm run-script run
    depends_on: [database, search]
    ports:
      - "9229:9229"
    user: "node"
    volumes:
      - ./:/home/node/app
    working_dir: /home/node/app
    environment:
      - VIRTUAL_HOST=local.recipes-api.arbee.me
      - VIRTUAL_PORT=3000
      - VIRTUAL_PROTO=http
    expose:
      - 3000
  database:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
#  redis:
#    image: redis:latest
#    command: ["redis-server", "--appendonly", "yes"]
#    restart: always
#    ports:
#      - "6379:6379"
#    volumes:
#      - ./devops/redis:/data
#  mail:
#    image: mailhog/mailhog
#    ports:
#      - "1025:1025"
#      - "8025:8025"
  search:
    image: elasticsearch:7.6.1
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "ELASTIC_PASSWORD=${ELASTIC_PASSWORD}"
      - xpack.security.enabled=true
      - http.port=9200
      - http.cors.allow-origin=http://localhost:1358
      - http.cors.enabled=true
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
    volumes:
      - esdata:/usr/share/elasticsearch/data
volumes:
  esdata:
  pgdata:
